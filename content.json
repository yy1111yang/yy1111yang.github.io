{"meta":{"title":"Azure Cloud Blog","subtitle":"CLI Migration","description":"Azure Cloud Blog","author":"Yong Yang","url":"https://yy1111yang.github.io","root":"/"},"pages":[{"title":"","date":"2023-06-27T06:56:54.235Z","updated":"2023-06-27T06:56:54.235Z","comments":true,"path":"about/index.html","permalink":"https://yy1111yang.github.io/about/index.html","excerpt":"","text":"Hi. i`m writing about Azure cloud in Blog."}],"posts":[{"title":"Azure app architecure - step05","slug":"20201220-azure-sample-app05","date":"2020-12-19T18:54:09.000Z","updated":"2023-06-27T06:56:54.231Z","comments":true,"path":"2020/12/19/20201220-azure-sample-app05/","link":"","permalink":"https://yy1111yang.github.io/2020/12/19/20201220-azure-sample-app05/","excerpt":"","text":"deploy Vue.js to Azure Static Web. Create empty azure storage account. Enable Static Web Site Get Endpoint URL Build Vue project 1npm run build After build, create \\dist folder.And we move this folder to $web container in storage account. We can use Storage Explorer.Storage Explorer Download After install Explorer, connect your storage before you created.Then move Blob container &gt; $web And drag and drop all files in build path dist\\ to right panel. Then open the browser, then move the endpoint at storage static web.But when we click the button Search User, we return error message about CORS. So, we added web endpoint in Azure Function. Finall, we connect successfully. Thanks Related PostsAzure app architecure - Summary Azure app architecure - step01 Azure app architecure - step02 Azure app architecure - step03 Azure app architecure - step04","categories":[{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/categories/Azure/"},{"name":"Function","slug":"Azure/Function","permalink":"https://yy1111yang.github.io/categories/Azure/Function/"}],"tags":[{"name":"Cloud","slug":"Cloud","permalink":"https://yy1111yang.github.io/tags/Cloud/"},{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/tags/Azure/"},{"name":"StaticWeb","slug":"StaticWeb","permalink":"https://yy1111yang.github.io/tags/StaticWeb/"},{"name":"Function","slug":"Function","permalink":"https://yy1111yang.github.io/tags/Function/"},{"name":"Cosmos","slug":"Cosmos","permalink":"https://yy1111yang.github.io/tags/Cosmos/"}]},{"title":"Azure app architecure - step04","slug":"20201220-azure-sample-app04","date":"2020-12-19T18:54:03.000Z","updated":"2023-06-27T06:56:54.231Z","comments":true,"path":"2020/12/19/20201220-azure-sample-app04/","link":"","permalink":"https://yy1111yang.github.io/2020/12/19/20201220-azure-sample-app04/","excerpt":"","text":"create Vue.js in local. Install vue-cli using cmd. 12npm install @vue/cli -gnpm i -g @vue/cli-init Create Vue-Project using vue-cli. 1vue init webpack user-frontend And enter value you want.I enter defalult vaules. After created project, execute vue project using cmd. 12cd user-frontendnpm run dev Add axios Module 1npm install axios@0.21.0 --save And change code in src\\main.js. 1234567891011import Vue from &#x27;vue&#x27;import App from &#x27;./App.vue&#x27;import axios from &#x27;axios&#x27; // import axiosVue.config.productionTip = falseVue.prototype.axios = axios // configure axiosnew Vue(&#123; render: h =&gt; h(App),&#125;).$mount(&#x27;#app&#x27;) And remove the code &lt;img src=&quot;./assets/logo.png&quot;&gt; in src/App.vue for remove img. And change the code in src\\components\\HelloWorld.vue 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657&lt;template&gt; &lt;div id&#x3D;&quot;app&quot;&gt; &lt;button v-on:click&#x3D;&quot;findUser&quot;&gt;Search User&lt;&#x2F;button&gt; &lt;div id&#x3D;&quot;example&quot;&gt; &lt;table id&#x3D;&quot;userList&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Name&lt;&#x2F;th&gt; &lt;th&gt;Age&lt;&#x2F;th&gt; &lt;th&gt;Sex&lt;&#x2F;th&gt; &lt;&#x2F;tr&gt; &lt;&#x2F;thead&gt; &lt;tbody id&#x3D;&quot;contacts&quot;&gt; &lt;tr v-for&#x3D;&quot;user in users&quot; v-bind:key&#x3D;&quot;user.name&quot;&gt; &lt;td&gt;&#123;&#123;user.name&#125;&#125;&lt;&#x2F;td&gt; &lt;td&gt;&#123;&#123;user.age&#125;&#125;&lt;&#x2F;td&gt; &lt;td&gt;&#123;&#123;user.sex&#125;&#125;&lt;&#x2F;td&gt; &lt;&#x2F;tr&gt; &lt;&#x2F;tbody&gt; &lt;&#x2F;table&gt; &lt;&#x2F;div&gt; &lt;&#x2F;div&gt; &lt;&#x2F;template&gt;&lt;script&gt;export default &#123; name: &#39;app&#39;, data: function () &#123; return &#123; users: [] &#125; &#125;, methods: &#123; findUser: function () &#123; &#x2F;&#x2F;const baseURI &#x3D; &#39;http:&#x2F;&#x2F;localhost:7071&#x2F;api&#39;; const baseURI &#x3D; &lt;function endpoint&gt; &#x2F;&#x2F; change user URL this.axios.get(&#96;$&#123;baseURI&#125;&#x2F;find-user&#96;) .then((result) &#x3D;&gt; &#123; this.users &#x3D; result.data &#125;) &#125; &#125;&#125;&lt;&#x2F;script&gt;&lt;!-- Add &quot;scoped&quot; attribute to limit CSS to this component only --&gt;&lt;style&gt;#app &#123; font-family: &#39;Avenir&#39;, Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; color: #2c3e50; max-width: 560px;&#125;&lt;&#x2F;style&gt; And retry exectue vue server. 1npm run dev We find changed screen like this.Then if we click button named Search User, occur error like this. To solve this problem, you enable CORS in Azure Function in portal.Enable Access-control-Allow-CredentialAdd localhost:8080Then save. After change, we retry click button, then we return data successfully. We finish make a simple vue project in local. Related PostsAzure app architecure - Summary Azure app architecure - step01 Azure app architecure - step02 Azure app architecure - step03 Azure app architecure - step05","categories":[{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/categories/Azure/"},{"name":"Function","slug":"Azure/Function","permalink":"https://yy1111yang.github.io/categories/Azure/Function/"}],"tags":[{"name":"Cloud","slug":"Cloud","permalink":"https://yy1111yang.github.io/tags/Cloud/"},{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/tags/Azure/"},{"name":"StaticWeb","slug":"StaticWeb","permalink":"https://yy1111yang.github.io/tags/StaticWeb/"},{"name":"Function","slug":"Function","permalink":"https://yy1111yang.github.io/tags/Function/"},{"name":"Cosmos","slug":"Cosmos","permalink":"https://yy1111yang.github.io/tags/Cosmos/"}]},{"title":"Azure app architecure - step03","slug":"20201220-azure-sample-app03","date":"2020-12-19T18:53:55.000Z","updated":"2023-06-27T06:56:54.227Z","comments":true,"path":"2020/12/19/20201220-azure-sample-app03/","link":"","permalink":"https://yy1111yang.github.io/2020/12/19/20201220-azure-sample-app03/","excerpt":"","text":"Deploy Azure Function In Azure Extenstion in VS Code, right click at function you created.Then Click Deploy to Function App.. Click Deploy. After a few minutes, we find the function in portal. We also check functions create-user, find-user in Functions. And we get the endpoint in each function.Copy the URL. And try to test create-user using browser. Also try to test find-user using browser. Two function working well.Deploy is successful. Related PostsAzure app architecure - Summary Azure app architecure - step01 Azure app architecure - step02 Azure app architecure - step04 Azure app architecure - step05","categories":[{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/categories/Azure/"},{"name":"Function","slug":"Azure/Function","permalink":"https://yy1111yang.github.io/categories/Azure/Function/"}],"tags":[{"name":"Cloud","slug":"Cloud","permalink":"https://yy1111yang.github.io/tags/Cloud/"},{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/tags/Azure/"},{"name":"StaticWeb","slug":"StaticWeb","permalink":"https://yy1111yang.github.io/tags/StaticWeb/"},{"name":"Function","slug":"Function","permalink":"https://yy1111yang.github.io/tags/Function/"},{"name":"Cosmos","slug":"Cosmos","permalink":"https://yy1111yang.github.io/tags/Cosmos/"}]},{"title":"Azure app architecure - step02","slug":"20201220-azure-sample-app02","date":"2020-12-19T18:53:47.000Z","updated":"2023-06-27T06:56:54.223Z","comments":true,"path":"2020/12/19/20201220-azure-sample-app02/","link":"","permalink":"https://yy1111yang.github.io/2020/12/19/20201220-azure-sample-app02/","excerpt":"","text":"Make Azure Function in Local requirementInstall Node.jsInstall Visual Studio Code. Open the VS Code. i set the path C:\\dev\\blog-backend\\. Install Azure Function in Extension. After install, you can show Azure Extension in left bar like picture.And click Sign in to Azure… for connect your subscription. After Auth, i connected my subscription. And Right Click, Click Create Function App in AzureThen type name you want. i named user-blog_backendand select language node.js 12 After a few minute, we check function app created under the picture. And select Azure function you created, Click icon Lightning.And select javascript, HTTP trigger.Type the name you want. i named create-user.Then select anonymous.Finally, create default code like this picture. We execute this code using press F5. tTen logging endpoint in terminal. I try GET method using browser. it’s working well. And we change code, add file.create-user/index.js 12345678910111213141516171819202122232425262728module.exports &#x3D; async function (context, req) &#123; var mongoose &#x3D; require(&#39;mongoose&#39;); var User &#x3D; require(&#39;..&#x2F;model&#x2F;user_model.js&#39;); var CONF &#x3D; require(&#39;..&#x2F;Config.js&#39;); mongoose.connect(&quot;mongodb:&#x2F;&#x2F;&quot;+CONF.COSMOSDB_HOST+&quot;:&quot;+CONF.COSMOSDB_PORT+&quot;&#x2F;&quot;+CONF.COSMOSDB_DBNAME+&quot;?ssl&#x3D;true&amp;replicaSet&#x3D;globaldb&quot;, &#123; auth: &#123; user: CONF.COSMOSDB_USER, password: CONF.COSMOSDB_PASSWORD &#125;, useNewUrlParser: true, useUnifiedTopology: true, retryWrites: false &#125;) .then(() &#x3D;&gt; console.log(&#39;Connection to CosmosDB successful&#39;)) .catch((err) &#x3D;&gt; console.error(err)); const user &#x3D; new User(&#123; name: req.query.name, age: req.query.age, sex: req.query.sex &#125;); context.res &#x3D; &#123; &#x2F;&#x2F; status: 200, &#x2F;* Defaults to 200 *&#x2F; body: await user.save() &#125;;&#125; Create folder and file model/user_model.js. 12345678910var mongoose &#x3D; require(&#39;mongoose&#39;);var Schema &#x3D; mongoose.Schema;const User &#x3D; new mongoose.Schema(&#123; name: String, age: Number, sex: String&#125;);module.exports &#x3D; mongoose.model(&#39;User&#39;, User); Create file Config.js in root path.You need to refer cosmosDB connection_string in portal. 1234567module.exports &#x3D; &#123; COSMOSDB_USER : &lt;cosmos_user_name&gt;, COSMOSDB_PASSWORD : &lt;cosmos_password&gt;, COSMOSDB_DBNAME : &quot;user&quot;, # we create database before COSMOSDB_HOST : &lt;cosmos_host_name&gt;, COSMOSDB_PORT : 10255&#125; And we add mongoose module.Execute cmd in terminal. 1npm install mongoose@5.11.8 --save After install well, execute function press F5 in index.js.And test the function like this. And we check the result in portal. And i made two data test02, test03 using exeucte API . get user dataWe create additional function named find-user.and change codefind-user\\index.js 123456789101112131415161718192021module.exports &#x3D; async function (context, req) &#123; var mongoose &#x3D; require(&#39;mongoose&#39;); var User &#x3D; require(&#39;..&#x2F;model&#x2F;user_model.js&#39;); var CONF &#x3D; require(&#39;..&#x2F;Config.js&#39;); mongoose.connect(&quot;mongodb:&#x2F;&#x2F;&quot;+CONF.COSMOSDB_HOST+&quot;:&quot;+CONF.COSMOSDB_PORT+&quot;&#x2F;&quot;+CONF.COSMOSDB_DBNAME+&quot;?ssl&#x3D;true&amp;replicaSet&#x3D;globaldb&quot;, &#123; auth: &#123; user: CONF.COSMOSDB_USER, password: CONF.COSMOSDB_PASSWORD &#125;, useNewUrlParser: true, useUnifiedTopology: true, retryWrites: false &#125;) .then(() &#x3D;&gt; console.log(&#39;Connection to CosmosDB successful&#39;)) .catch((err) &#x3D;&gt; console.error(err)); context.res &#x3D; &#123; body: await User.find() &#125;;&#125; Then, test the function like this. We finish make Azure Function App in local.Good job!! Related PostsAzure app architecure - Summary Azure app architecure - step01 Azure app architecure - step03 Azure app architecure - step04 Azure app architecure - step05","categories":[{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/categories/Azure/"},{"name":"Function","slug":"Azure/Function","permalink":"https://yy1111yang.github.io/categories/Azure/Function/"}],"tags":[{"name":"Cloud","slug":"Cloud","permalink":"https://yy1111yang.github.io/tags/Cloud/"},{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/tags/Azure/"},{"name":"StaticWeb","slug":"StaticWeb","permalink":"https://yy1111yang.github.io/tags/StaticWeb/"},{"name":"Function","slug":"Function","permalink":"https://yy1111yang.github.io/tags/Function/"},{"name":"Cosmos","slug":"Cosmos","permalink":"https://yy1111yang.github.io/tags/Cosmos/"}]},{"title":"Azure app architecure - step01","slug":"20201220-azure-sample-app01","date":"2020-12-19T18:53:40.000Z","updated":"2023-06-27T06:56:54.223Z","comments":true,"path":"2020/12/19/20201220-azure-sample-app01/","link":"","permalink":"https://yy1111yang.github.io/2020/12/19/20201220-azure-sample-app01/","excerpt":"","text":"Make CosmosDB First, we need to crete cosmosdb in portal.Select API : Cosmos DB for MongoDB API, Capacity mode: Serverlessthen other value set default value.and create resource. After created DB, you need to go to Data Explorer in left bar.And Click New Database Type User in text box and create. And, you can check database created like picture. Related PostsAzure app architecure - Summary Azure app architecure - step02 Azure app architecure - step03 Azure app architecure - step04 Azure app architecure - step05","categories":[{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/categories/Azure/"},{"name":"Function","slug":"Azure/Function","permalink":"https://yy1111yang.github.io/categories/Azure/Function/"}],"tags":[{"name":"Cloud","slug":"Cloud","permalink":"https://yy1111yang.github.io/tags/Cloud/"},{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/tags/Azure/"},{"name":"StaticWeb","slug":"StaticWeb","permalink":"https://yy1111yang.github.io/tags/StaticWeb/"},{"name":"Function","slug":"Function","permalink":"https://yy1111yang.github.io/tags/Function/"},{"name":"Cosmos","slug":"Cosmos","permalink":"https://yy1111yang.github.io/tags/Cosmos/"}]},{"title":"Azure app architecure - Summary","slug":"20201220-azure-sample-app","date":"2020-12-19T18:36:27.000Z","updated":"2023-06-27T06:56:54.223Z","comments":true,"path":"2020/12/19/20201220-azure-sample-app/","link":"","permalink":"https://yy1111yang.github.io/2020/12/19/20201220-azure-sample-app/","excerpt":"","text":"I recently made a simple application for study.and i share this post. Final Architecture Price per month at koreacentral. Azure Calculator There is 5 step Related PostsAzure app architecure - step01 Azure app architecure - step02 Azure app architecure - step03 Azure app architecure - step04 Azure app architecure - step05","categories":[{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/categories/Azure/"},{"name":"Function","slug":"Azure/Function","permalink":"https://yy1111yang.github.io/categories/Azure/Function/"}],"tags":[{"name":"Cloud","slug":"Cloud","permalink":"https://yy1111yang.github.io/tags/Cloud/"},{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/tags/Azure/"},{"name":"StaticWeb","slug":"StaticWeb","permalink":"https://yy1111yang.github.io/tags/StaticWeb/"},{"name":"Function","slug":"Function","permalink":"https://yy1111yang.github.io/tags/Function/"},{"name":"Cosmos","slug":"Cosmos","permalink":"https://yy1111yang.github.io/tags/Cosmos/"}]},{"title":"Latency Check bentween  Azure VM","slug":"20201216-latte-test","date":"2020-12-15T19:30:42.000Z","updated":"2023-06-27T06:56:54.219Z","comments":true,"path":"2020/12/15/20201216-latte-test/","link":"","permalink":"https://yy1111yang.github.io/2020/12/15/20201216-latte-test/","excerpt":"","text":"This time, Check Latency between Azure VM.And i use latte for check latency.latte download Ready two virtual machine. one is src VM. Other one is Target VM. And Target VM allow firewall about latte.So, execute under command. 123netsh advfirewall firewall add rule program=&lt;path&gt;\\latte.exe name=&quot;Latte&quot; protocol=any dir=in action=allow enable=yes profile=ANYnetsh advfirewall firewall add rule program=c:\\tools\\latte.exe name=&quot;Latte&quot; protocol=any dir=in action=allow enable=yes profile=ANY Start Latte in Target VM 123latte -a &lt;Receiver IP address&gt;:&lt;port&gt; -i &lt;iterations&gt;latte -a 10.0.0.5:5005 -i 65100 Execute Command in CMD Start Latte in Src VM 123latte -c -a &lt;Receiver IP address&gt;:&lt;port&gt; -i &lt;iterations&gt;latte -c -a 10.0.0.5:5005 -i 65100 Execute Command in CMDWe Check latency 551.19(usec) between VMs And i enable Network Accelerate.It’s only turn on using CLI not portal. 1234$list &#x3D; az network nic list | ConvertFrom-Jsonforeach($item in $list) &#123; az network nic update --accelerated-networking true -n $item.name -g $item.resourceGroup --no-wait&#125; Also, We can check value in portal in below. And I test latte again.Result Turn on Network Accelerate - 97.36(usec) For more faster, I Create** Proximity_placement_group** Type the name. Set Proximity_placement_group in two VM.VM &gt; Configuration &gt; Proximity_placement_group Result Configure Proximity_Group and Network Accelerate And I additional test only configure Proximity_placement_group without network accelerate. Then I summary today result belo table. thanks. Case Latency(usec) default 551.19 NIC Accelerate 97.36 Proximity_placement_group 303.51 Nic Accelerate + Proximity_placement_group 83.91 Related Posts","categories":[{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/categories/Azure/"},{"name":"VM","slug":"Azure/VM","permalink":"https://yy1111yang.github.io/categories/Azure/VM/"}],"tags":[{"name":"Cloud","slug":"Cloud","permalink":"https://yy1111yang.github.io/tags/Cloud/"},{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/tags/Azure/"},{"name":"Network","slug":"Network","permalink":"https://yy1111yang.github.io/tags/Network/"},{"name":"Latency","slug":"Latency","permalink":"https://yy1111yang.github.io/tags/Latency/"}]},{"title":"How can search NSG flow log easily?","slug":"20201215-nsg-visualize","date":"2020-12-14T15:23:51.000Z","updated":"2023-06-27T06:56:54.219Z","comments":true,"path":"2020/12/14/20201215-nsg-visualize/","link":"","permalink":"https://yy1111yang.github.io/2020/12/14/20201215-nsg-visualize/","excerpt":"","text":"We usually allow, block network flow using NSG in Azure.So, it’s very important to search NSG flow log. Today, we search NSG using Log analytics and Network Watcher in Azure portal.Before start, you ready one storage account to store NSG flow log. Firstly, move the NSG panel, and click the NSG Flow logswe know status means log collect status.And traffic Analytics means sending log data to log analytics Then, click the row, and enable Status.I prefer version2, and select storage account to store log data before you crated.Retention 0 means permanent. Scroll down, you can see Traffic Analytis Status.Turn on Status also.And select interval. i think 1 hour is too long. And then select log analytics workspace.You don’t have it, you can create in here. don’t worry about it. Then save the settings. Oops. i have a problem like this.I have to solve this problem for save the settings. Open additional page in azure portal. then go to the Subscription &gt; Resource Providers.And search Microsoft.insights. it’s not registered… Click Register. Check the change the status. good well.! And try save flow log settings again. it’s good working well. So, it’s turn to search the log. move the network watcher &gt; Traffic Analytics.Initial settings spend about 20,30 minunte like under picture. After about 20 min, you can check flow dashboard following picture.it divided inbound, outbound.and divided allow, block.if you wanna search about this, click the bar. then move the query editor. This is query editor. default query is setted automatically for search all row data. I recommend just two additional code under the picture.1, where condition - you can search specific Ip, Port.2, summarized - you can aggregated data easily. Thanks Related Posts","categories":[{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/categories/Azure/"},{"name":"VM","slug":"Azure/VM","permalink":"https://yy1111yang.github.io/categories/Azure/VM/"},{"name":"NSG","slug":"Azure/VM/NSG","permalink":"https://yy1111yang.github.io/categories/Azure/VM/NSG/"}],"tags":[{"name":"Cloud","slug":"Cloud","permalink":"https://yy1111yang.github.io/tags/Cloud/"},{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/tags/Azure/"},{"name":"NSG","slug":"NSG","permalink":"https://yy1111yang.github.io/tags/NSG/"},{"name":"Log Analytics","slug":"Log-Analytics","permalink":"https://yy1111yang.github.io/tags/Log-Analytics/"}]},{"title":"How can i move vm to other subscription.","slug":"20201214-az-vm-copy-other-sub","date":"2020-12-14T01:21:32.000Z","updated":"2023-06-27T06:56:54.215Z","comments":true,"path":"2020/12/14/20201214-az-vm-copy-other-sub/","link":"","permalink":"https://yy1111yang.github.io/2020/12/14/20201214-az-vm-copy-other-sub/","excerpt":"","text":"Hi. Sometimes we use POC subscription not PROD subscription.Then if you done POC, you move to resources include VM, LB, etc…Maybe VM move to another subscription not share tenant too difficult. So i try it this post.Total process is following:1. disk to snapshot2. snapshot to VHD in blob3. blob to blob(target Subscription)4. make disk by VHD in blob5. create vm using disk Start Demo1. disk to snapshotI have just one VM having two disk include osdisk. Before start demo, we have to create storage account to store vhd. After created storage, we also create container. i named vmdisk And we convert disks to snapshots.If you have many VM, use the command foloowing. 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556# create snapshot $resourceGroupName = &#x27;bastion-rg&#x27;$resourceGroup = Get-AzureRmResourceGroup -Name $resourceGroupName$location = $resourceGroup.Location $nameList = @( @&#123; name=&#x27;az204-bastion-vm&#x27;; &#125;) # create osDisk snapshotforeach($list in $nameList) &#123; $vmName = $list.name # get vm information $vm = get-azvm -ResourceGroupName $resourceGroupName -Name $vmName # set snapshot configuration $snapshot = New-AzSnapshotConfig -SourceUri $vm.StorageProfile.OsDisk.ManagedDisk.Id -Location $location -AccountType Premium_LRS -CreateOption copy # create Snapshot $snapshotName = &#x27;osdisk-&#x27; + $vmName + &#x27;-001-snapshot&#x27; New-AzSnapshot -Snapshot $snapshot -SnapshotName $snapshotName -ResourceGroupName $resourceGroupName -AsJob&#125; # create dataDisk snapshotforeach($list in $nameList) &#123; $vmName = $list.name # get vm information $vm = get-azvm -ResourceGroupName $resourceGroupName -Name $vmName # get Disk information $dataDiskList = $vm.StorageProfile.DataDisks foreach($dList in $dataDiskList) &#123; $diskName = $dList.name # if disk is null then continue; if(!$diskName) &#123; continue; &#125; $disk = get-azureRmDisk -ResourceGroupName $resourceGroupName -DiskName $diskName # set snapshot configuration $snapshot = New-AzSnapshotConfig -SourceUri $disk.id -Location $location -AccountType Premium_LRS -CreateOption copy $snapshotName = &#x27;datadisk-&#x27; + $vmName + &#x27;-001-snapshot&#x27; # create Snapshot New-AzSnapshot -Snapshot $snapshot -SnapshotName $snapshotName -ResourceGroupName $resourceGroupName -AsJob &#125;&#125; Get-Job | Wait-Job&quot;All jobs completed&quot;get-azSnapshot -ResourceGroupName $resourceGroupName | format-table Name, ResourceGroupName 2. snapshot to VHD in blob.After created snapshots, we should move snapshot to blob container.Use following command. 123456789101112131415$storageAccountName = &#x27;&#x27;$storageContainerName = &#x27;&#x27;$sasExpiryDuration=3600$storageAccountKey = &quot; $snpashots = Get-AzSnapshot -resourceGroup &#x27;&#x27;foreach($snapshot in $snpashots) &#123; $snapshotName = $snapshot.Name $destinationVHDFileName = $snapshotName + &#x27;.vhd&#x27; $resourceGroupName = $snapshot.ResourceGroupName $sas=$(az snapshot grant-access --resource-group $resourceGroupName --name $snapshotName --duration-in-seconds $sasExpiryDuration --query [accessSas] -o tsv) az storage blob copy start --destination-blob $destinationVHDFileName --destination-container $storageContainerName --account-name $storageAccountName --account-key $storageAccountKey --source-uri $sas &#125; Then we check it’s working well in container. 3. blob to blob(target Subscription)Need two value for this job.One is container path, the other one is SAS token.In the container List, click the right three dot. then click container properties. Then you check URL. memorize it for next CLI. Then in the left side bar in storage account, Click the ‘Shared Access Signature’.Click the container, and the click generate SAS ... button. then memorized SAS token And, you have target Subscription. create storage account and container.I also create stoarge account named yy1111targetmigrateAnd container name is vmdisktargetAnd also get container path, SAS token. 3. blob to blob(target Subscription)use following command. 123456$srcPath = &quot;https://yy1111migratestorage.blob.core.windows.net/vmdisk&quot;$srcSAS = &quot;&quot;$destPath =&quot;https://yy1111targetmigrate.blob.core.windows.net/vmdisktarget&quot;$destSAS = &quot;&quot;azcopy cp $srcPath$srcSAS $destPath$destSAS --recursive It’s spend a few minutes. it depends on disk size. A few minutes later, process is done like under screen. And you check target container, vhd is visible.you click refresh button if modified time is changed continuous.then you wait more. 4. make disk by VHD in blob12345678910111213141516171819202122232425$resourceGroupName = &#x27;target-rg&#x27;$resourceGroup = Get-AzureRmResourceGroup -Name $resourceGroupName$location = $resourceGroup.Location$StorageAccountName = &#x27;yy1111targetmigrate&#x27;$containerName = &#x27;vmdisktarget&#x27;$storageAccount = Get-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName$list = az storage blob list -c $containerName --account-name $StorageAccountName | ConvertFrom-Json$sourceUri_prefix = &#x27;https://&#x27; + $storageAccountName + &#x27;.blob.core.windows.net/&#x27; + $containerName + &#x27;/&#x27;Foreach($list in $List) &#123; $sourceUri = $sourceUri_prefix + $list.name $osDiskName = $list.name.split(&#x27;.&#x27;)[0] write-host $sourceUri New-AzDisk -DiskName $osDiskName -Disk ` (New-AzDiskConfig -AccountType Premium_LRS -Location $location -CreateOption Import -SourceUri $sourceUri -StorageAccountId $storageAccount.Id) ` -ResourceGroupName $resourceGroupName -AsJob &#125;Get-Job | Wait-Job&quot;All jobs completed&quot;get-AzDisk -ResourceGroupName $resourceGroupName | format-table Name, ResourceGroupName And then check Disks in the portal. 5. create vm using diskExecute following command. but, you should modify variable appropriately 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465$List = @( @&#123; name=&#x27;target-vm&#x27;; privateIpAddress=&#x27;10.0.0.4&#x27;; vmSize=&#x27;Standard_D2s_v3&#x27;; publicIpName=&#x27;&#x27;;&#125;)$resourceGroupName = &#x27;target-rg&#x27;$vnetName = &quot;target-vnet&quot; $subnetName = &quot;default&quot;$nsgName = &quot;prd-web-nsg&quot;$storageType = &#x27;Premium_LRS&#x27;$dataDiskCaching=&#x27;ReadOnly&#x27;$resourceGroup = Get-AzureRmResourceGroup -Name $resourceGroupName$location = $resourceGroup.Location $storageAccountName = &#x27;osstemprddiag&#x27;Foreach($list in $List) &#123; $vmName = $list.name $privateIpAddress= $list.privateIpAddress $vmSize= $list.vmSize $publicIPName = $list.publicIpName $publicIp = &#x27;&#x27; if($publicIpName) &#123; $publicIp = Get-AzureRmPublicIpAddress -Name $publicIpName &#125; $osDiskName = $vmName + &#x27;_OsDisk_0&#x27; $dataDiskName = $vmName + &#x27;_DataDisk_0&#x27; $nicName = $vmName + &quot;-nic01&quot; $Lun=$dataDiskName.substring($dataDiskName.length-1) # 2. get nic information $vnet = get-AzVirtualNetwork -Name $vnetName $nsg = Get-AzureRmNetworkSecurityGroup -Name $nsgName $subnet = Get-AzureRmVirtualNetworkSubnetConfig -virtualNetwork $vnet -Name $subnetName $nic = Get-AzureRmNetworkInterface -Name $nicName if(!$nic) &#123; if($publicIpName) &#123; $nic = New-AzNetworkInterface -Name $nicName -PrivateIpAddress $privateIpAddress -ResourceGroupName $resourceGroupName -Location $location -SubnetId $subnet.id -NetworkSecurityGroupId $nsg.Id -PublicIpAddressId $publicIp.id &#125; else &#123; $nic = New-AzNetworkInterface -Name $nicName -PrivateIpAddress $privateIpAddress -ResourceGroupName $resourceGroupName -Location $location -SubnetId $subnet.id -NetworkSecurityGroupId $nsg.Id &#125; &#125; # 3. get osDisk information $osDisk = Get-AzureRmDisk -DiskName $osDiskName $dataDisk = Get-AzureRmDisk -DiskName $dataDiskName $osDiskSizeGB=$osDisk.DiskSizeGB $dataDiskSizeGB=$dataDisk.DiskSizeGB # 4. set vm configuration $vmConfig = New-AzVMConfig -VMName $vmName -VMSize $vmSize $vm = Add-AzVMNetworkInterface -VM $vmConfig -Id $nic.Id $vm = Set-AzVMOSDisk -VM $vm -ManagedDiskId $osDisk.id -StorageAccountType $storageType -DiskSizeInGB $osDiskSizeGB -CreateOption Attach -Windows $vm = Add-AzVMDataDisk -VM $vm -Name $dataDiskName -DiskSizeInGB $dataDiskSizeGB -StorageAccountType $storageType -Caching $dataDiskCaching -Lun $Lun -CreateOption Attach -ManagedDiskId $dataDisk.id $vm = Set-AzVMBootDiagnostic -VM $vm -Enable -ResourceGroupName $resourceGroupName -StorageAccountName $storageAccountName # 6. create vm New-AzVM -ResourceGroupName $resourceGroupName -Location $location -VM $vm -LicenseType &#x27;Windows_Server&#x27; -AsJob&#125; #Get-Job | Wait-Job&quot;All jobs completed&quot;#get-AzVM -ResourceGroupName $resourceGroupName | format-table Name, ResourceGroupName Thanks. Related Posts","categories":[{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/categories/Azure/"},{"name":"VM","slug":"Azure/VM","permalink":"https://yy1111yang.github.io/categories/Azure/VM/"}],"tags":[{"name":"Cloud","slug":"Cloud","permalink":"https://yy1111yang.github.io/tags/Cloud/"},{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/tags/Azure/"},{"name":"Copy","slug":"Copy","permalink":"https://yy1111yang.github.io/tags/Copy/"},{"name":"Move","slug":"Move","permalink":"https://yy1111yang.github.io/tags/Move/"}]},{"title":"Search unused resource using resource-graph-explorer","slug":"20201214-resource-graph","date":"2020-12-13T18:23:14.000Z","updated":"2023-06-27T06:56:54.215Z","comments":true,"path":"2020/12/13/20201214-resource-graph/","link":"","permalink":"https://yy1111yang.github.io/2020/12/13/20201214-resource-graph/","excerpt":"","text":"Today, i post about search unused resource using resource-graph-explorer &amp; dashboard You move to ‘Resource-Graph-Explorer’ in Azure Portal.And then you can query anything. First, you query this command. it’s same query under the picture. disabled nic Accelerate 123Resources| where type == &quot;microsoft.network/networkinterfaces&quot; and properties [&quot;enableAcceleratedNetworking&quot;] == &quot;false&quot;| project resourceGroup, name note: i capture without |project resourceGroup, name And you can save query. Click save as button.Type the name appropriate about query function.You can choice type private, public. this time, i saved private Then, you find query name changed.And we pin to dashboard this query. Click the button pin to dashboard Create new dashboard with private. then Click create button It’s working good. then i added additional query in dashboard. *no associated Nic 123Resources| where type == &quot;microsoft.network/networkinterfaces&quot; and isnull(properties.virtualMachine)| project resourceGroup, name no custom dns settings 123Resources| where type == &quot;microsoft.network/networkinterfaces&quot; and array_length(properties.dnsSettings.appliedDnsServers) == 0| project resourceGroup, name no attached managed disks 123Resources| where type == &quot;microsoft.compute/disks&quot; and isempty(managedBy)| project resourceGroup, name no assocated nsg 1234Resources| where type == &quot;microsoft.network/networksecuritygroups&quot; and isnull(properties.networkInterfaces)and isnull(properties.subnets)| project resourceGroup, name no associated pip 1234Resources| where type == &quot;microsoft.network/publicipaddresses&quot;| where isnull(properties.ipConfiguration) or isempty(properties.ipConfiguration)| project resourceGroup, name Then, i added all query to dashboard.It’s good job! Related Posts","categories":[{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/categories/Azure/"},{"name":"VM","slug":"Azure/VM","permalink":"https://yy1111yang.github.io/categories/Azure/VM/"}],"tags":[{"name":"Cloud","slug":"Cloud","permalink":"https://yy1111yang.github.io/tags/Cloud/"},{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/tags/Azure/"},{"name":"Resource","slug":"Resource","permalink":"https://yy1111yang.github.io/tags/Resource/"},{"name":"Graph","slug":"Graph","permalink":"https://yy1111yang.github.io/tags/Graph/"}]},{"title":"Internet connection not working in VM after connection LB.","slug":"20201213-azure-lb-nat-problem","date":"2020-12-12T23:03:17.000Z","updated":"2023-06-27T06:56:54.131Z","comments":true,"path":"2020/12/12/20201213-azure-lb-nat-problem/","link":"","permalink":"https://yy1111yang.github.io/2020/12/12/20201213-azure-lb-nat-problem/","excerpt":"","text":"Azure vm can connection internet outbound without public ip.But Somtimes internet connection not working after connection LB. Exactly, Occurs when the following conditions are combined.First, using Standard Load balancer.Second, config Az set. Currently, some region include south korea not support zone. so use only az set. There is Four solution solving this problem.1, change the sku ‘basic’ in Load balancer.2, assoicated public ip in VM.3, using public Load balancer NAT outbound.4, using Nat Gateway. then, i show demo about solutions about NAT.Create vm wwith Az Set. Deploy is done. then access vm. I check internet connection is enabled.it’s good well. Then, create Standard Load balancer. select type sku below picture. it’s deployed LB. then add Backend pool.skip the add probe,rule. and, we access vm again. then check innternet connection.it’s not working.. so, we create Nat LB to solve this problem.Create Public LB like under picture. And add Backend pool like screen. add outbound rule Select FrontendIp, backend poolthen others set to default. After complete setting, again check internet connection in VM.This time, To check NAT IP, connect whatismyip web page.We check return frontendIP in Public LoadBalcer. And we delete public LB for test NAT gateway Again check internet connection. again not working. Then create NAT gateway like under the picture. Add setting abbout Outbound IP.Create one Public Ip, a public Ip prefix. we only create 2 range. Set the subnet associated gateway. After set the settings, go to the vm.Again check status. it’s working well.And we know this ip is one of public ip prefix range. Related Posts","categories":[{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/categories/Azure/"},{"name":"VM","slug":"Azure/VM","permalink":"https://yy1111yang.github.io/categories/Azure/VM/"}],"tags":[{"name":"Cloud","slug":"Cloud","permalink":"https://yy1111yang.github.io/tags/Cloud/"},{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/tags/Azure/"},{"name":"VM","slug":"VM","permalink":"https://yy1111yang.github.io/tags/VM/"},{"name":"LB","slug":"LB","permalink":"https://yy1111yang.github.io/tags/LB/"},{"name":"NAT","slug":"NAT","permalink":"https://yy1111yang.github.io/tags/NAT/"}]},{"title":"Azure VM Copy using Snapshot","slug":"20201212-az-vm-copy-01","date":"2020-12-11T16:14:00.000Z","updated":"2023-06-27T06:56:54.127Z","comments":true,"path":"2020/12/11/20201212-az-vm-copy-01/","link":"","permalink":"https://yy1111yang.github.io/2020/12/11/20201212-az-vm-copy-01/","excerpt":"","text":"This post about Azure VM Copy using snapshot. The total process is as follow. OsDisk, Datadisk =&gt; snapshot snapshot =&gt; OsDisk_copy, Datadisk_copy OsDisk_copy, Datadisk_copy =&gt; VM_copy 1. Create Snapshot.Go to the panel in OsDisk. Click +Create Snapshot Move screen for create snapshot.Type the name, select Storage type.We can changed storage type after create disk in disk screen. 2. Create Disk_Copy.Snapshot also create to managed disk directly.Click button +Create Disk in upper. Go to the screen for create VM.Type the name and select the sku. 3. Create VMAbout 30 sec later, created Disk.And suppport create VM Directly using managed disk in Auzre Portal.It’s very useful i think.Click the button +Create VM and skip the creating VM. Finally deploy VM is done. we memorized public IP for connection RDP. We find the certification name below. it’s VM name copied VM before.So, we know vm copy is successful. Related Posts","categories":[{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/categories/Azure/"},{"name":"VM","slug":"Azure/VM","permalink":"https://yy1111yang.github.io/categories/Azure/VM/"}],"tags":[{"name":"Cloud","slug":"Cloud","permalink":"https://yy1111yang.github.io/tags/Cloud/"},{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/tags/Azure/"},{"name":"VM","slug":"VM","permalink":"https://yy1111yang.github.io/tags/VM/"},{"name":"Snapshot","slug":"Snapshot","permalink":"https://yy1111yang.github.io/tags/Snapshot/"},{"name":"Copy","slug":"Copy","permalink":"https://yy1111yang.github.io/tags/Copy/"}]},{"title":"How can we check network connection between Azure VM","slug":"20201211-az-vm-network-connect","date":"2020-12-10T23:09:26.000Z","updated":"2023-06-27T06:56:54.123Z","comments":true,"path":"2020/12/10/20201211-az-vm-network-connect/","link":"","permalink":"https://yy1111yang.github.io/2020/12/10/20201211-az-vm-network-connect/","excerpt":"","text":"How can we check network connection between VM? First, i deploy two Azure VM in same vnet. I will check network connection 10.0.0.4 =&gt; 10.0.0.5:8080Already i install IIS in 10.0.0.5 and change listen port 80 to 8080.Usually we can telnet or ping.But i use powershell command as following. 1234Test-NetConnection [IP Address or ComputerName] -port [Port Number]# ExmapleTest-NetConnection 10.0.0.5 -port 80 Oops… I return TcpTestSucceded:False. 1. Check Windows firewall.First, We open Window Firewall with Advanced Security in Windows. Right Click on InboundRule in left sidebar, and add a rule.Click Port then next like under the picture. Select Protocol(TCP) then type port for open. we should type 8080 in case. And then we select Allow, Block about rule.We have to Allow connection, so we select Allow the connection Select Default value. And type rule name and description you want. We checked rule added. left green light means rule enabled. Ok. we check network connection again.But.. we can’t reach destination… 2. Using azure trouble shootMaybe i think it block in NSG.If we have under 10 rule in NSG, we find the block rule easily.But over 10 rule, it’s too hard find it.Then we use Azure Troble Shoot. In VM panel, in Azure Portal. &gt; Connection troubleshoot &gt; Use Network Watcher for detailed connectio tracing Select Specify manually, then type Target IP(10.0.0.5).Type port 8080 below input box.Then Click Check We return result. if you check first time, it’s longer then you think.Because install network watcher.Then the status is Unreachable.We find the problem about status of 10.0.0.4.Then Click the row about 10.0.0.4.It blocked rule named 8080-outbound-allow. 3. check azure nsgWe go to NSG cause block problem.Oops, i added Deny Rule. not Allow. i changed action to Allow And then i check status, we finally connection succecssful Related Posts","categories":[{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/categories/Azure/"},{"name":"Windows","slug":"Azure/Windows","permalink":"https://yy1111yang.github.io/categories/Azure/Windows/"}],"tags":[{"name":"Cloud","slug":"Cloud","permalink":"https://yy1111yang.github.io/tags/Cloud/"},{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/tags/Azure/"},{"name":"Windows","slug":"Windows","permalink":"https://yy1111yang.github.io/tags/Windows/"},{"name":"Network","slug":"Network","permalink":"https://yy1111yang.github.io/tags/Network/"}]},{"title":"Useful CLI about Azure NSG","slug":"20201211-az-nsg-cli","date":"2020-12-10T20:29:24.000Z","updated":"2023-06-27T06:56:54.123Z","comments":true,"path":"2020/12/10/20201211-az-nsg-cli/","link":"","permalink":"https://yy1111yang.github.io/2020/12/10/20201211-az-nsg-cli/","excerpt":"","text":"Search Rule include ‘Any Port’123456789101112131415161718192021222324$inbound = @();$outbound = @();$nsgList = az network nsg list | convertFrom-Jsonforeach($nsg in $nsgList) &#123; foreach($rule in $nsg.securityRules) &#123; if( $rule.destinationPortRange -eq &#x27;*&#x27; ) &#123; $details = @&#123; nsgName=$nsg.name direction=$rule.direction priority=$rule.priority ruleName=$rule.name source=&#x27;&#x27; dest=&#x27;&#x27; &#125; if($rule.direction -eq &#x27;Inbound&#x27;) &#123; $inbound += New-Object PSObject -Property $details &#125; else &#123; $outbound += New-Object PSObject -Property $details &#125; &#125; &#125;&#125;$inbound | select-object nsgName, direction, ruleName, priority, source, dest | sort-object -property nsgName, priority | format-table$outbound | select-object nsgName, direction, ruleName, priority, source, dest | sort-Object -property nsgName, priority | format-table Search NSG Rule include ‘Any Source, Any Destination’123456789101112131415161718192021222324$inbound = @();$outbound = @();$nsgList = az network nsg list | convertFrom-Jsonforeach($nsg in $nsgList) &#123; foreach($rule in $nsg.securityRules) &#123; if( $rule.sourceAddressPrefix -eq &#x27;*&#x27; -OR $rule.destinationAddressPrefix -eq &#x27;*&#x27; ) &#123; $details = @&#123; nsgName=$nsg.name direction=$rule.direction priority=$rule.priority ruleName=$rule.name source=&#x27;&#x27; dest=&#x27;&#x27; &#125; if($rule.direction -eq &#x27;Inbound&#x27;) &#123; $inbound += New-Object PSObject -Property $details &#125; else &#123; $outbound += New-Object PSObject -Property $details &#125; &#125; &#125;&#125;$inbound | select-object nsgName, direction, ruleName, priority, source, dest | sort-object -property nsgName, priority | format-table$outbound | select-object nsgName, direction, ruleName, priority, source, dest | sort-Object -property nsgName, priority | format-table Export NSG to CSV by resourceGroup1234567891011121314151617param($rgName)if($rgName -eq $null) &#123; $rgName = read-host -Prompt &quot;please enter a rgName&quot;&#125;$nsgs = Get-AzureRmNetworkSecurityGroup -ResourceGroupName $rgName$exportPath = &#x27;.&#x27;#backup nsgs to csvForeach ($nsg in $nsgs) &#123; New-Item -ItemType file -Path &quot;$exportPath\\$($nsg.Name).csv&quot; -Force $nsgRules = $nsg.SecurityRules | Sort-Object @&#123; e = &#x27;Direction&#x27;; a = $true &#125;, @&#123; e = &#x27;Priority&#x27;; a = $true &#125; foreach ($nsgRule in $nsgRules) &#123; $nsgRule | Select-Object Name,Direction,Access,Priority,Protocol,@&#123;Name=’SourceAddressPrefix’;Expression=&#123;[string]::join(“ ”, ($_.SourceAddressPrefix))&#125;&#125;,@&#123;Name=’SourcePortRange’;Expression=&#123;[string]::join(“ ”, ($_.SourcePortRange))&#125;&#125;,@&#123;Name=’DestinationAddressPrefix’;Expression=&#123;[string]::join(“ ”, ($_.DestinationAddressPrefix))&#125;&#125;,@&#123;Name=’DestinationPortRange’;Expression=&#123;[string]::join(“ ”, ($_.DestinationPortRange))&#125;&#125;,Description ` | Export-Csv &quot;$exportPath\\$($nsg.Name).csv&quot; -NoTypeInformation -Encoding UTF-8 -Append &#125;&#125; Get Nsg rule include specific IP1234567891011121314151617181920212223242526272829303132333435363738394041param($checkIp, $rgName)if($checkIp -eq $null) &#123; $checkIp = read-host -Prompt &quot;please enter a checkIp&quot;&#125;if($rgName -eq $null) &#123; $rgName = read-host -Prompt &quot;please enter a rgName&quot;&#125;$inbound = @();$outbound = @();$nsgList = az network nsg list | convertFrom-Jsonforeach($nsg in $nsgList) &#123; foreach($rule in $nsg.securityRules) &#123; if( $rule.sourceAddressPrefix -eq $checkIp -or $rule.destinationAddressPrefix -eq $checkIp ` -or $rule.sourceAddressPrefixes -contains $checkIp -or $rule.destinationAddressPrefixes -contains $checkIp) &#123; $details = @&#123; nsgName=$nsg.name direction=$rule.direction priority=$rule.priority ruleName=$rule.name source=&#x27;&#x27; dest=&#x27;&#x27; &#125; if($sourceAddressPrefix -eq $checkIp -or $rule.sourceAddressPrefixes -contains $checkIp ) &#123; $details.source = &#x27;true&#x27; &#125; if($rule.destinationAddressPrefix -eq $checkIp -or $rule.destinationAddressPrefixes -contains $checkIp) &#123; $details.dest = &#x27;true&#x27; &#125; if($rule.direction -eq &#x27;Inbound&#x27;) &#123; $inbound += New-Object PSObject -Property $details &#125; else &#123; $outbound += New-Object PSObject -Property $details &#125; &#125; &#125;&#125;$inbound | select-object nsgName, direction, ruleName, priority, source, dest | sort-object -property nsgName, priority | format-table$outbound | select-object nsgName, direction, ruleName, priority, source, dest | sort-Object -property nsgName, priority | format-table Related Posts","categories":[{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/categories/Azure/"},{"name":"Powershell","slug":"Azure/Powershell","permalink":"https://yy1111yang.github.io/categories/Azure/Powershell/"}],"tags":[{"name":"Cloud","slug":"Cloud","permalink":"https://yy1111yang.github.io/tags/Cloud/"},{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/tags/Azure/"},{"name":"Powershell","slug":"Powershell","permalink":"https://yy1111yang.github.io/tags/Powershell/"},{"name":"NSG","slug":"NSG","permalink":"https://yy1111yang.github.io/tags/NSG/"}]},{"title":"Search Unused Resource in Azure using CLI","slug":"20201211-az-no-associated-resource-cli","date":"2020-12-10T19:56:02.000Z","updated":"2023-06-27T06:56:54.123Z","comments":true,"path":"2020/12/10/20201211-az-no-associated-resource-cli/","link":"","permalink":"https://yy1111yang.github.io/2020/12/10/20201211-az-no-associated-resource-cli/","excerpt":"","text":"Hi. sometimes, we forgot delete unused resource.It cause only delete Azure VM not include attached resource such as disk, nic, nsg, public Ip.Especially, you have over 100 resource in subscription… it’s hard to check it.But, if you use CLI in this post, you can easy find it. Search unattached managed disk1234567891011121314write-host &#x27;no associated disk searching...&#x27;$results = @()$diskList = az disk list | convertFrom-Json$results += $diskList | foreach-object -parallel &#123; if(!$_.managedBy) &#123; $noDisk = $_.id -split &quot;/&quot; $details = @&#123; rgName=$noDisk[4] noAttachedDisk=$noDisk[8] &#125; return New-Object PSObject -Property $details &#125;&#125;write-host ($results | select-object rgName, noAttachedDisk | Sort-Object &#123; $_.rgName&#125; | format-table | Out-String) -ForegroundColor Red No Associated Public IP123456789101112131415write-host &#x27;no associated ip searching...&#x27;$results = @()$ipList = az network public-ip list | convertFrom-Json$results += $ipList | foreach-object -parallel &#123; if(!$_.ipConfiguration) &#123; $noIp = $_.id -split &quot;/&quot; #write-host $noIp[4] : $noIp[8] -ForegroundColor Red $details = @&#123; rgName=$noIp[4] noAssocatedIP=$noIp[8] &#125; return New-Object PSObject -Property $details &#125;&#125;write-host ( $results | select-object rgName, noAssocatedIp | Sort-Object &#123; $_.rgName&#125; | format-table | out-string ) -ForegroundColor Red No Associated NiC to VM1234567891011121314write-host &#x27;no associated nic searching...&#x27;$results= @()$nicList = az network nic list | convertFrom-Json$results += $nicList | foreach-object -parallel &#123; if(!$_.virtualMachine) &#123; $noNic = $_.id -split &quot;/&quot; $details = @&#123; rgName=$noNic[4] noAttachedNic=$noNic[8] &#125; return New-Object PSObject -Property $details &#125;&#125;write-host ( $results | select-object rgName, noAttachedNic | Sort-Object &#123; $_.rgName&#125; | format-table | out-string ) -ForegroundColor Red No Associated NSG123456789101112131415write-host &#x27;no assocated nsg searching...&#x27;$results = @()$nsgList = az network nsg list | convertFrom-Json$results += $nsgList | foreach-object -Parallel &#123; $rtnNsg = Get-AzNetworkSecurityGroup -name $_.name if(!$rtnNsg.NetworkInterfaces -and !$rtnNsg.Subnets) &#123; $noNsg = $_.id -split &quot;/&quot; $details = @&#123; rgName=$noNsg[4] noAssocatedNsg=$noNsg[8] &#125; return New-Object PSObject -Property $details &#125;&#125; -ThrottleLimit 20write-host ( $results | select-object rgName, noAssocatedNsg | Sort-Object &#123; $_.rgName&#125; | format-table | out-string ) -ForegroundColor Red Related Posts","categories":[{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/categories/Azure/"},{"name":"Powershell","slug":"Azure/Powershell","permalink":"https://yy1111yang.github.io/categories/Azure/Powershell/"}],"tags":[{"name":"Cloud","slug":"Cloud","permalink":"https://yy1111yang.github.io/tags/Cloud/"},{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/tags/Azure/"},{"name":"Powershell","slug":"Powershell","permalink":"https://yy1111yang.github.io/tags/Powershell/"},{"name":"Unused Resource","slug":"Unused-Resource","permalink":"https://yy1111yang.github.io/tags/Unused-Resource/"}]},{"title":"Azure Subscription change, check in CLI and powershell","slug":"20201210-az-account-cli","date":"2020-12-10T02:37:02.000Z","updated":"2023-06-27T06:56:54.123Z","comments":true,"path":"2020/12/10/20201210-az-account-cli/","link":"","permalink":"https://yy1111yang.github.io/2020/12/10/20201210-az-account-cli/","excerpt":"","text":"Change Current Subscription.1234567$subName = &quot;&quot;# powershell Set-AzureRmContext -Subscription $subName# azure CLIaz account set -s $subName Show Current Subscription.12345# azure CLIaz account show# powershellGet-AzureRmContext List Available Subscription.12345# azure CLIaz account list# powershellGet-AzureRmContext -ListAvailable Related Posts","categories":[{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/categories/Azure/"},{"name":"Powershell","slug":"Azure/Powershell","permalink":"https://yy1111yang.github.io/categories/Azure/Powershell/"}],"tags":[{"name":"Cloud","slug":"Cloud","permalink":"https://yy1111yang.github.io/tags/Cloud/"},{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/tags/Azure/"},{"name":"Powershell","slug":"Powershell","permalink":"https://yy1111yang.github.io/tags/Powershell/"},{"name":"Subscription","slug":"Subscription","permalink":"https://yy1111yang.github.io/tags/Subscription/"}]}],"categories":[{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/categories/Azure/"},{"name":"Function","slug":"Azure/Function","permalink":"https://yy1111yang.github.io/categories/Azure/Function/"},{"name":"VM","slug":"Azure/VM","permalink":"https://yy1111yang.github.io/categories/Azure/VM/"},{"name":"NSG","slug":"Azure/VM/NSG","permalink":"https://yy1111yang.github.io/categories/Azure/VM/NSG/"},{"name":"Windows","slug":"Azure/Windows","permalink":"https://yy1111yang.github.io/categories/Azure/Windows/"},{"name":"Powershell","slug":"Azure/Powershell","permalink":"https://yy1111yang.github.io/categories/Azure/Powershell/"}],"tags":[{"name":"Cloud","slug":"Cloud","permalink":"https://yy1111yang.github.io/tags/Cloud/"},{"name":"Azure","slug":"Azure","permalink":"https://yy1111yang.github.io/tags/Azure/"},{"name":"StaticWeb","slug":"StaticWeb","permalink":"https://yy1111yang.github.io/tags/StaticWeb/"},{"name":"Function","slug":"Function","permalink":"https://yy1111yang.github.io/tags/Function/"},{"name":"Cosmos","slug":"Cosmos","permalink":"https://yy1111yang.github.io/tags/Cosmos/"},{"name":"Network","slug":"Network","permalink":"https://yy1111yang.github.io/tags/Network/"},{"name":"Latency","slug":"Latency","permalink":"https://yy1111yang.github.io/tags/Latency/"},{"name":"NSG","slug":"NSG","permalink":"https://yy1111yang.github.io/tags/NSG/"},{"name":"Log Analytics","slug":"Log-Analytics","permalink":"https://yy1111yang.github.io/tags/Log-Analytics/"},{"name":"Copy","slug":"Copy","permalink":"https://yy1111yang.github.io/tags/Copy/"},{"name":"Move","slug":"Move","permalink":"https://yy1111yang.github.io/tags/Move/"},{"name":"Resource","slug":"Resource","permalink":"https://yy1111yang.github.io/tags/Resource/"},{"name":"Graph","slug":"Graph","permalink":"https://yy1111yang.github.io/tags/Graph/"},{"name":"VM","slug":"VM","permalink":"https://yy1111yang.github.io/tags/VM/"},{"name":"LB","slug":"LB","permalink":"https://yy1111yang.github.io/tags/LB/"},{"name":"NAT","slug":"NAT","permalink":"https://yy1111yang.github.io/tags/NAT/"},{"name":"Snapshot","slug":"Snapshot","permalink":"https://yy1111yang.github.io/tags/Snapshot/"},{"name":"Windows","slug":"Windows","permalink":"https://yy1111yang.github.io/tags/Windows/"},{"name":"Powershell","slug":"Powershell","permalink":"https://yy1111yang.github.io/tags/Powershell/"},{"name":"Unused Resource","slug":"Unused-Resource","permalink":"https://yy1111yang.github.io/tags/Unused-Resource/"},{"name":"Subscription","slug":"Subscription","permalink":"https://yy1111yang.github.io/tags/Subscription/"}]}